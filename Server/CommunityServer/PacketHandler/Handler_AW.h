#pragma once
#ifndef WORLDSERVER_HANDLER_AW_H
#define WORLDSERVER_HANDLER_AW_H

#include <PacketStruct_AW.h>

#include "./PacketHandler.h"

namespace ns_world {
;
class ServerSessionInWorld;

}; //end of namespace

namespace ns_world { namespace handlers {
;

class Handler_AW
{
public:
    static const ns_world::PacketHandlerInfo GetPacketHandlerNodes();
    //
#undef HANDLER_NODE_INFO
#define HANDLER_NODE_INFO(_category_, _protocol_, phase) \
    static void Handler_AW::On##_protocol_(\
        ns_world::ServerSessionInWorld* const server_session, \
        const MSG_BASE* const msg, const uint16_t msg_size)

    HANDLER_NODE_INFO(AW_CONNECTION, AW_AGENTSERVER_INFO_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_CONNECTION, AW_PREPARE_NEW_USER_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_SET_CHARNAME_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_ENTER_ZONE_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_LEAVE_ZONE_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_LOGOUT, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_RESTORE_CMD, PHASE_SERVICE);
    //HANDLER_NODE_INFO(AW_USERCOUNT_SYN, PHASE_SERVICE);
    //HANDLER_NODE_INFO(AW_USERMONEY_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_PARTY, AW_PARTY_MAKE_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_PARTY, AW_PARTY_JOIN_MEMBER_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_PARTY, AW_PARTY_WITHDRAW_MEMBER_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_PARTY, AW_PARTY_DESTROY_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_GM, AW_GM_WHISPER_SET_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_GM, AW_GM_USERCHAT_BLOCK_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_LEVELUP_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_CHAO, AW_CHAO_REQUEST_REVENGEINFO_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_CHAO, AW_CHAO_REMOVE_REVENGE_CHAR_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_CHAO, AW_CHAO_ADD_REVENGE_CHAR_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_ITEM, AW_ITEM_CHANGE_SPECIAL_ITEM_OWN_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_ITEM, AW_ITEM_SPECIAL_ITEM_CLEAR_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_ITEM, AW_ITEM_USE_DECREE_ITEM_ACK, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_ITEM, AW_ITEM_USE_DECREE_ITEM_NAK, PHASE_SERVICE);
#ifdef _NA_20101011_HEIM_LOTTO_CASH_TICKET
    HANDLER_NODE_INFO(AW_ITEM, AW_ITEM_USE_HEIM_LOTTO_TICKET_SYN, PHASE_SERVICE);
#endif
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_STATUS_INTERCEPTION_SYN, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_OPERATION, AW_OPERATION_ROOM_CTRL_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_GM, AW_GM_NOTICE_CMD, PHASE_SERVICE);
    //__NA_001359_20090619_HEIM_LOTTO_SYSTEM = {
    HANDLER_NODE_INFO(AW_GM, AW_GM_LOTTO_NUM_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_GM, AW_GM_LOTTO_SETTLE_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_GM, AW_GM_LOTTO_FUND_CMD, PHASE_SERVICE);
    //}
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_STATUS_GROUP_EXP_ACQUISITION_CMD, PHASE_SERVICE);
    //__NA_0_20090627_HEIM_ACQUISITION_S2S_NOTIFICATION
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_STATUS_HEIM_ACQUISITION_NTF, PHASE_SERVICE);
    //__NA_0_20090627_HEIM_CONSUMPTION_S2S_NOTIFICATION
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_STATUS_HEIM_CONSUMPTION_NTF, PHASE_SERVICE);
    //__KR_001355_20090608_GROUPINGSYSTEM_GW
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_STATUS_GROUP_START_CMD, PHASE_SERVICE);
    //__NA_001359_20090619_HEIM_LOTTO_SYSTEM = {
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_LOTTO_REWARD_ACK, PHASE_SERVICE);
#ifdef _NA_0_20100115_HEIM_LOTTO_TICKET_PURCHASE
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_LOTTO_TICKET_PURCHASE_ACK, PHASE_SERVICE);
#endif // _NA_0_20100115_HEIM_LOTTO_TICKET_PURCHASE
    //}
#ifdef _PCBANG_POLICY_CHANGE_POST_EXPIRED
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_STATUS_PCBANG_BILLING_NTF, PHASE_SERVICE);
#endif
    // implemented by _NA_20100812_INTEGRATE_SYSTEM_MEMO_DOMINATION
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_SYSTEMMEMO_SEND_CMD, PHASE_SERVICE);
    HANDLER_NODE_INFO(AW_USER_STATUS, AW_USER_STADING_POSITION_CMD, PHASE_SERVICE);
    //_KR_0_20091021_FIRENDINVITATION_EXTEND
    HANDLER_NODE_INFO(AW_FRIENDINVITATE, AW_FRIEND_INVITATIONR_INSERT_CMD, PHASE_SERVICE);
    //
    __DISABLE_COPY(Handler_AW);
};

}}; //end of namespace

//==================================================================================================

#endif //WORLDSERVER_HANDLER_AW_H