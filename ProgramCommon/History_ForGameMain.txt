/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//														ProgramCommon 작업 History (게임쪽)
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//---------------------------------------------------------------------------------------------------------------
	<공지사항>
1. 차후 C/S 프로토콜 작업시 서버측에서 프로토콜 Sequence Diagram 문서를 작성해서 클라이언트측에 넘겨 줄 것!!



//---------------------------------------------------------------------------------------------------------------
* 20050404(월) 김민욱
1. E3에서 적용할 아이템쪽 처리 작업 Start
2. 기획에서 변경된 아이템 스크립트 파싱 수정
3. 


* 20050404(월)
1. 3DEngine 4월 1일 Version으로 작업 : 몬스터 밀리기/몬스터 뜀뛰기 기능


* 20050404(월) 방생성 및 이동 1차 완료
1. 그래픽 Resource없이 C/S 작업 1차 완료
2. 추후 담당자 : 이준석


* 20050401(금)
1. ProgramCommon 에 "SinTable.h", "SinTable.cpp" 추가


* 20050401(금) 김민욱
1.  MemoryPoolTempl에 통계, 디버그용 함수 추가
2. DBProxy의 유저의 성향의 통계에 따라 캐쉬의 유지 시간 변경 처리	3.31


* 20050325(금)
1. E3 Version : AI모듈과 GameServer간 메세지 통신방식에서 직접 처리 방식으로 전환
2. GameServer내 NPC AI로 위치옮김


* 20050329(화) 김민욱
1. 미션, 마을, 헌팅에 관련된 방 생성 구조 설계 및 구현 완료
2. 주위사람의 랜더링 정보 자신에게 보내는 수정 작업 완료
3. GameServer에서 DBProxy로 캐릭터 저장 정보 send


* 20050325(금) 김민욱
1. sector에서 이동처리 패킷 수정

* 20050322(화) 김민욱
1. SolarFileReader에서 closeFile할때 m_dwBufPos = 0를 하지 않는 버그 Fixed
2. 0 == itemslotset assert 에러 수정
3. Agent가 Master에서 정보 가져 와 DBP에 접속하고 client listen 시작
4. 필드방처리	2005.3.25
5. 배틀방처리	2005.3.25


* 20050321(월) 김민욱
1. Agent Server로의 처리 ( 구조 설계, 구현 완료 )
2. DBP 종료(solarDB)버그 잡기	2005.3.22
3. gameserver player의 접속 방식 Agent로 이동했으므로 삭제, 처리 변경	
4. 맵 등장, 맵이동 관련 처리 수정
5. 맵 스크립트 변경된거 처리	2005.3.22

	
* 20050223(수) 김민욱
1. ItemManager Combine()처리

* 20050222(월) 김민욱
1. SolarClientNetwork 제작 완료
2. SolarClientNetwork client 적용 완료

* 20050214(월) 김민욱
1. (클,서) solarfileReader로 스크립트 파서 교체
2. 시연회 수정 작업

* 20050204(금) 김민욱
1. (클) 레이더 방향 처리, 레이더 스크립트 구조 잡기
2. (클) 몬스터 게이지 처리
3. (클) 채팅 포커스
4. (클) 로그인 창 처리
5. (클) 크기가 다른 아이템을 같게 처리

* 20050131(월) 김민욱
1. (클) 맵 랜더링, 스카이 랜더링
2. (클,서)_bin의 맵 데이터 폴더 정리
3. soloarFileReader 클래스 제작 : 기획의 요구에 맞춘 스크립트 파싱을 위해 제작

* 20050128(금) 김민욱
1. (클)리소스 메니져 : 맵 로딩 및 오브젝트 로딩, 파싱 완료, 테스트 완료
2. (클)맵 오브젝트, 풀 렌더링 처리 완료

* 20050127(목) 김민욱
1. (클)herogaugeDialog 구현

* 20050125(화) 김민욱
1. (클)핫키메니져 구현

* 20050114(금) 김민욱
1. (클)MousePointer추가
2. (클)아이템 이동 처리, 인벤토리, 장착창 구현 완료..테스트만 남음

* 20050105(수) 김민욱
1. 기획쪽 파라미터 정리 및 CharInfoList추가

* 20050103(월) 김민욱
1. Portal Server시나리오 설계 및 구현 시작
2. GameServer->DBProxy로 주기적인 charinfo 업데이트 코드 추가

* 20041230(목) 김민욱
1. PortalServer 솔루션에 추가 및 기본 골격 구현, protocol_XP, packetstruct_XP추가

* 20041229(수) 김민욱
1. SolarDatabase ODBC 에러 출력 메시지 수정
2. DG간의 캐릭터 정보 테스트 완료!
3. SCSlotFactory작성

* 20041228(화) 김민욱
1. ItemManager구현 (인벤, 장착, 상점, 거래, 노점에서 모두 사용할 것)
2. 기획에서 넘어온 파라미터 정리후 구조체정의, data parsing후 데이터 처리( 우선 아이템, 몬스터 데이터만 )
3. portal server 구현에 대한 고려..	


* 20041222(수) 김민욱
1. 클라이언트 설계구현완료, 우선 채팅창 테스트 작업
2. 클라이언트 네트워크 패킷 처리 구조 설계, 구현
3. 클라이언트 헤더파일 정리 필요

* 20041221(화) 김민욱
1. 클라이언트 인터페이스 로직 설계 및 구현!
2. 해야할창들 : 채팅창, 캐릭터 창, 스킬창, 인벤토리, 캐릭터 게이지, 메인 인터페이스 창 정도 일까?

	
* 20041220(월) 김민욱
1. CG_SYNC_MOVE 관련 정리, 이동처리 완료
2. 아이템 slot, container 변경 및 로그인시 정보 처리
3. CG_CHARINFO_REQ_SYN 시나리오 처리 완료

* 20041215(수) 김민욱
1. SCObject들간의 Hierarchy 제거, 구조 변경
2. DG간의 Dummy Test
3. DBProxy 캐쉬 처리 골격 구현
5. DG간의 Character의 Item, Skill 정보 처리


* 20041213(월) 김민욱
1. ProgramCommon, Common의 명확한 분리 작업
 - 클라이언트와 서버의 공통된 소스 공유와 분리파일을 정리!

* 20041209(목) 김민욱
1. 프로토콜 Naming Rule : Postfix 추가
 - DBR : SolarDatabase에서의 DBResult를 MSG로 변환하여 처리하기 위해! DBProxy에서만 사용!!!
2. SCCommon디렉토리 추가
 - 클라이언트와 서버가 공유하는 소스 코드
 - 현재 : SCObject관련 소스, SCSlot관련 소스
3. 클라이언트가 접속해서 CHARINFO를 받아오는 시나리오 구현완료. Client <-> GameServer <-> DBProxy <-> DB
 - 클라이언트가 안되는 관계로 테스트는 연기
 - DBProxy에서 Cache할 부분에 대한 설계가 필요! ( 현재 캐쉬 안함! )
 
* 20041130(화) 김민욱
1. 좀더 편하게 사용하기 위해 VarPacket 만듬


* 20041129(월) 김민욱
1. KEY와 ID의 차이 정립
 - KEY는 서버가 다시 켜지면 다시 KEY-Generator에서 할당받은 유일한 값
   ex) ObjectKey
 - ID는 DB혹은 File에 존재하여 서버의 구동과 상관없이 불변, 유일한 값
   ex) Guid, MapID
2. 핸들러 네이밍 규칙
 - class이름 : Handler_카테고리
3. NetworkPacket클래스 추가
 - 카테고리가 서버마다 틀리고, 서버간의 카테고리관리를 한곳에서 효율적으로 하기위해
 - 주의 : 연결되는 서버가 늘어나거나, 카테고리,프로토콜 추가시 Register혹은 코드를 추가해야 한다. 
4. Field의 EnterField()함수안에서 뷰포트, 동기화 처리


* 20041122(월) 프로토콜 정리 작업(이유열)
1. 프로토콜 Naming Rule
  1) Prefix
		C : Client
		G : Game Server
		M : Master Server
		D : DBP Server

 2) Postfix
		SYN - Server에 요청
		ACK - 요청에 대한 허락
		NAK - 요청에 대한 거부
		CMD - Server의 명령
		BRD - Server가 동기화 관련 내용을 알림

 3) 프로토콜 Naming Rule
		Prefix_카테고리명_프로토콜명_Postfix
		ex) CG_CONNECTION_REGISTER_SYN

2. 프로토콜 파일 규칙

 1) 프로토콜 정의 헤더파일
	Protocol_Prefix.h 
	ex)Protocol_CG.h
 2) 패킷 구조체 정의 헤더파일
	PacketStruct_Prefix.h
	ex)PacketStruct_CG.h




